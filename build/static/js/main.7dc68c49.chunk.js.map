{"version":3,"sources":["Login.js","SignUp.js","Dashboard.js","CurrencyRate.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","redirect","email","password","user","users","setRedirect","setState","redirectToRegister","to","redirectToDashboard","arr","count","map","localStorage","setItem","JSON","stringify","name","phoneNumber","props","history","push","alert","onChange","e","key","target","value","parse","getItem","this","Card","body","className","style","marginLeft","marginRight","marginTop","height","CardBody","margin","FormGroup","row","Label","sm","Col","Input","type","Button","onClick","React","Component","SignUp","errors","submit","savedUsers","handleValidation","test","length","err","i","color","display","styles","backgroundColor","borderColor","borderRadius","Dashboard","convertHandler","unit","axios","get","then","response","result","totalPrice","data","rates","rate","toFixed","catch","error","console","log","message","dropdownOpen","products","number","price","totalNumber","getTotalNumber","Object","keys","index","total","paddingLeft","removeItem","css","Row","arginTop","reset","Container","product","xs","paddingTop","textAlign","increment","decrement","disabled","Dropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","modifiers","setMaxHeight","enabled","order","fn","overflow","maxHeight","a","DropdownItem","CurrencyRate","Table","size","marginBottom","values","App","path","exact","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7dc68c49.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Input, Label, FormGroup, Col, Card, CardBody } from \"reactstrap\";\n\nclass Login extends React.Component {\n    state = {\n        redirect: false,\n        email: \"\",\n        password: \"\",\n        user: {},\n        users: []\n    }\n    componentDidMount() {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        this.setState({ users });\n    }\n    setRedirect = () => {\n        this.setState({ redirect: true });\n    }\n    redirectToRegister = () => {\n        if (this.state.redirect) {\n            return <Redirect to='/signup' />\n        } else return\n    }\n    redirectToDashboard = () => {\n        const { email, password, users } = this.state;\n        if (users) {\n            let arr = [], count = 0;\n            users.map(user => {\n                if (user.email === email && user.password === password && password !== \"\" && email !== \"\") {\n                    localStorage.setItem(\"user\", JSON.stringify({ name: user.name, email, password, phoneNumber: user.phoneNumber }))\n                    this.props.history.push('/dashboard');\n                    arr.push(true);\n                    count = count + 1;\n                }\n            })\n            if (count === 0) {\n                alert(\"Invalid credentials. Please register.\");\n            }\n            this.setState({ user: { email, password } });\n        }\n    }\n    onChange = (e, key) => {\n        this.setState({ [key]: e.target.value });\n    }\n\n    render() {\n        const { redirect, email, password } = this.state;\n        return (\n            <Card body className=\"text-center\" style={{ marginLeft: \"25%\", marginRight: \"25%\", marginTop: \"5%\", height: \"500px\" }}>\n                <CardBody>\n                    <div style={{ margin: 10 }}>\n                        {!redirect ?\n                            <div>\n                                <FormGroup row>\n                                    <Label sm={2}>Email</Label>\n                                    <Col sm={10}>\n                                        <Input value={email} name=\"email\" onChange={(e) => this.onChange(e, 'email')} />\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label sm={2}>Password</Label>\n                                    <Col sm={10}>\n                                        <Input value={password} name=\"password\" type=\"password\" onChange={(e) => this.onChange(e, 'password')} />\n                                    </Col>\n                                </FormGroup>\n                                <Button onClick={this.redirectToDashboard}>Login</Button>\n                                <br /><br />\n                                <p>Not registered? Click here <Button onClick={this.setRedirect}>Register</Button></p>\n                            </div>\n                            :\n                            this.redirectToRegister()}\n                    </div>\n                </CardBody>\n            </Card>\n        )\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Button, Input, FormGroup, Label, Col, CardBody, Card } from \"reactstrap\";\n\nclass SignUp extends React.Component {\n    state = {\n        name: \"\",\n        phoneNumber: \"\",\n        email: \"\",\n        password: \"\",\n        users: [],\n        errors: []\n    }\n    submit = () => {\n        const savedUsers = JSON.parse(localStorage.getItem(\"users\"));\n        const { users, name, phoneNumber, email, password } = this.state;\n        users.push({ name, email, phoneNumber, password });\n        savedUsers.push({ name, email, phoneNumber, password });\n        localStorage.setItem(\"users\", JSON.stringify(savedUsers));\n        alert(\"Registered successfully. Please login\");\n        this.props.history.push('/');\n    }\n    onChange = (e, key) => {\n        this.setState({ [key]: e.target.value });\n    }\n    handleValidation = () => {\n        let { errors, name, password, email, phoneNumber } = this.state;\n        errors = [];\n        if (!name) {\n            errors.push(\"Name cannot be empty\");\n        }\n        if (!((/^[a-zA-Z]+$/).test(name))) {\n            errors.push(\"Name can be only letters\");\n        }\n        if (!email) {\n            errors.push(\"Email cannot be empty\");\n        }\n        if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/).test(email)) {\n            errors.push(\"Please enter a valid email address\");\n        }\n        if (!password) {\n            errors.push(\"Password cannot be empty\");\n        }\n        if (!((/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{6,}$/).test(password))) {\n            errors.push(\"Passwords must be at least 6 characters long, contain at least one capital and lowercase letter, and special character.\");\n        }\n        if (!phoneNumber) {\n            errors.push(\"Phone Number cannot be empty\");\n        }\n        if (!((/^\\d{10}$/).test(phoneNumber))) {\n            errors.push(\"Please enter 10 digit number\");\n        }\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.submit();\n        }\n    }\n\n    render() {\n        const { name, email, password, phoneNumber, errors } = this.state;\n        return (\n            <Card body className=\"text-center\" style={{ marginLeft: \"25%\", marginRight: \"25%\", marginTop: \"5%\", height: \"500px\" }}>\n                <CardBody>\n                    <div style={{ margin: 10 }}>\n                        <FormGroup row>\n                            <Label sm={2}>Name</Label>\n                            <Col sm={10}>\n                                <Input value={name} name=\"name\" onChange={(e) => this.onChange(e, 'name')} />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Phone Number</Label>\n                            <Col sm={10}>\n                                <Input value={phoneNumber} name=\"PhoneNumber\" onChange={(e) => this.onChange(e, 'phoneNumber')} />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Email</Label>\n                            <Col sm={10}>\n                                <Input value={email} name=\"email\" onChange={(e) => this.onChange(e, 'email')} />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={2}>Password</Label>\n                            <Col sm={10}>\n                                <Input value={password} name=\"password\" type=\"password\" onChange={(e) => this.onChange(e, 'password')} />\n                            </Col>\n                        </FormGroup>\n                        {errors.length > 0 && errors.map((err, i) => {\n                            return <span key={i} style={{ color: \"red\", display: \"block\" }}>{err}</span>\n                        })}\n                        <Button onClick={this.handleValidation}>Register</Button>\n                    </div>\n                </CardBody>\n            </Card>\n        )\n    }\n}\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { css } from \"emotion\";\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, Row, Col } from 'reactstrap';\n\nconst styles = {\n    button1: {\n        backgroundColor: \"#0062cc\", borderColor: \"#0062cc\",\n        \"&:hover\": { backgroundColor: \"#0062cc\", borderColor: \"#0062cc\" }\n    },\n    button2: {\n        backgroundColor: \"#fd7e14\", borderColor: \"#fd7e14\",\n        \"&:hover\": { backgroundColor: \"#fd7e14\", borderColor: \"#fd7e14\" }\n    },\n    button3: {\n        backgroundColor: \"#ffc107\", borderColor: \"#ffc107\",\n        \"&:hover\": { backgroundColor: \"#ffc107\", borderColor: \"#ffc107\" }\n    },\n    button4: { borderRadius: 15, margin: 10 }\n}\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false,\n            unit: \"\",\n            products: [\n                { name: \"Product1\", number: 1, price: 10.00 },\n                { name: \"Product2\", number: 2, price: 20.00 },\n                { name: \"Product3\", number: 3, price: 30.00 },\n                { name: \"Product4\", number: 1, price: 40.50 }\n            ],\n            totalNumber: 0,\n            totalPrice: 0.00,\n            rate: 0.00,\n            rates: []\n        }\n    }\n    componentDidMount() {\n        const { products } = this.state;\n        localStorage.setItem(\"products\", JSON.stringify(products));\n        this.getTotalNumber();\n        let totalPrice = 0;\n        for (let i = 0; i < products.length; i++) {\n            totalPrice += products[i].price * products[i].number;\n        }\n        this.setState({ totalPrice, products });\n        axios.get(\"https://open.exchangerate-api.com/v6/latest\")\n            .then(response => {\n                this.setState({ rates: Object.keys(response.data.rates) });\n            });\n    }\n    toggle() {\n        this.setState({ dropdownOpen: !this.state.dropdownOpen });\n    }\n    increment(index) {\n        const { products, totalPrice } = this.state;\n        products[index].number = products[index].number + 1;\n        const total = totalPrice + (products[index].price * 1);\n        this.getTotalNumber();\n        this.setState({ products, totalPrice: total });\n    };\n    decrement(index) {\n        const { products, totalPrice } = this.state;\n        if (products[index].number > 1) {\n            products[index].number = products[index].number - 1;\n            this.getTotalNumber();\n            let total = totalPrice - (products[index].price * 1);\n            this.setState({ products, totalPrice: total });\n        }\n    };\n    reset() {\n        const products = JSON.parse(localStorage.getItem(\"products\"));\n        let totalNumber = 0;\n        for (var i = 0; i < products.length; i++) {\n            totalNumber += products[i].number;\n        }\n        let totalPrice = 0;\n        for (let i = 0; i < products.length; i++) {\n            totalPrice += products[i].price * products[i].number;\n        }\n        this.setState({ totalPrice, products, totalNumber, rate: 0.00 });\n    };\n    convertHandler = () => {\n        if (this.state.unit !== \"USD\") {\n            axios.get(`https://open.exchangerate-api.com/v6/latest?symbols=${this.state.unit}`)\n                .then(response => {\n                    const result = this.state.totalPrice * response.data.rates[this.state.unit];\n                    this.setState({ rate: result.toFixed(2) });\n                })\n                .catch(error => {\n                    console.log(\"Error\", error.message);\n                });\n        } else {\n            alert(\"Cannot convert the same currency\");\n        }\n    };\n    getTotalNumber() {\n        const { products } = this.state;\n        let totalNumber = 0;\n        for (var i = 0; i < products.length; i++) {\n            totalNumber += products[i].number;\n        }\n        this.setState({ totalNumber });\n    }\n    render() {\n        const { dropdownOpen, products, rate, totalPrice, totalNumber, rates, unit } = this.state;\n        return (\n            <div style={{ backgroundColor: \"lightgrey\", height: \"100vh\" }}>\n                <Col>\n                    <div style={{ paddingLeft: 1450 }}>\n                        <Button\n                            onClick={() => { this.props.history.push('/'); localStorage.removeItem(\"user\"); localStorage.removeItem(\"products\") }}\n                            className={css(styles.button2, styles.button4)}\n\n                        >Log out</Button>\n                    </div>\n                    <Row style={{ backgroundColor: \"darkgrey\", height: 50, color: \"white\", arginTop: 50 }}>\n                        <div style={{ margin: 10 }}>{totalNumber}</div>\n                    </Row>\n                </Col>\n                <Button className={css(styles.button1, styles.button4)} onClick={() => this.reset()}>Reset</Button>\n                <Container style={{ marginLeft: 10 }}>\n                    {products.map((product, index) => {\n                        return (\n                            <Row style={{ display: \"flex\", margin: 10 }} key={index}>\n                                <Col\n                                    xs=\"1\"\n                                    style={{ marginLeft: 5, marginRight: 5, backgroundColor: \"darkgrey\", paddingTop: 5, color: \"white\" }}\n                                >{product.name}</Col>\n                                <Col\n                                    xs=\"1\"\n                                    style={{ marginLeft: 5, marginRight: 5, textAlign: \"center\", paddingTop: 5, color: \"white\" }}\n                                    className={css(styles.button2)}\n                                >{product.number}</Col>\n                                <Col xs=\"1\"\n                                    className={css(styles.button3)}\n                                    style={{ marginLeft: 5, marginRight: 5, textAlign: \"center\", paddingTop: 5, color: \"white\" }}\n                                >{product.price}</Col>\n                                <Col xs=\"1\">\n                                    <Button\n                                        className={css(styles.button1)} style={{ textAlign: \"center\", paddingTop: 5, color: \"white\" }}\n                                        onClick={() => this.increment(index)}\n                                    >+</Button>\n                                </Col>\n                                <Col xs=\"1\">\n                                    <Button className={css(styles.button1)}\n                                        style={{ marginLeft: -35, textAlign: \"center\", paddingTop: 5, color: \"white\" }}\n                                        onClick={() => this.decrement(index)}\n                                    >-</Button>\n                                </Col>\n                            </Row>\n                        )\n                    })}\n                </Container>\n                <Row style={{ display: \"flex\", marginTop: 100, marginLeft: 40 }}>\n                    <Col xs=\"1\" style={{ backgroundColor: \"darkgrey\", textAlign: \"center\", paddingTop: 5, color: \"white\" }}>{totalPrice}</Col>\n                    <Col xs=\"1\"><Button>USD</Button></Col>\n                    <Col xs=\"1\">\n                        <Button\n                            className={css(styles.button1)}\n                            style={{ marginLeft: -50 }}\n                            onClick={() => this.convertHandler()}\n                            disabled={!unit}\n                        >Convert</Button>\n                    </Col>\n                    <Col xs=\"1\"><Button className={css(styles.button1)} style={{ marginLeft: -80 }}>{rate}</Button></Col>\n                    <Dropdown isOpen={dropdownOpen} toggle={() => this.toggle()} style={{ marginLeft: -80 }}>\n                        <DropdownToggle caret>{unit ? unit : \"Select unit\"}</DropdownToggle>\n                        <DropdownMenu\n                            modifiers={{\n                                setMaxHeight: {\n                                    enabled: true,\n                                    order: 890,\n                                    fn: (data) => {\n                                        return {\n                                            ...data,\n                                            styles: { ...data.styles, overflow: 'auto', maxHeight: '100px' },\n                                        };\n                                    },\n                                },\n                            }}\n                        >\n                            {rates.map((a, i) => {\n                                return <DropdownItem key={i} onClick={() => this.setState({ unit: a })}>{a}</DropdownItem>\n                            })}\n                        </DropdownMenu>\n                    </Dropdown>\n                </Row>\n                <div style={{ marginLeft: \"15%\" }}>\n                    <Button\n                        style={{ backgroundColor: \"#28a745\", borderColor: \"#28a745\", margin: 25 }}\n                        onClick={() => this.props.history.push(\"/rate\")}\n                    >Currency rate</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport { Button, Table } from 'reactstrap';\nimport axios from 'axios';\n\nclass CurrencyRate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rates: []\n        }\n    }\n    componentDidMount() {\n        axios.get(\"https://open.exchangerate-api.com/v6/latest\")\n            .then(response => {\n                this.setState({ rates: response.data.rates });\n            })\n    }\n    render() {\n        return (\n            <div style={{ margin: 10 }}>\n                <Table size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>Currency Code</th>\n                            <th>Currency Rate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr xs=\"2\" style={{ marginBottom: 50 }}>\n                            <td >{Object.keys(this.state.rates).map((rate, i) => {\n                                return <div key={i}>{rate}</div>\n                            })}</td>\n                            <td >{Object.values(this.state.rates).map((rate, i) => {\n                                return <div key={i}>{rate}</div>\n                            })}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n                <Button onClick={() => this.props.history.push(\"/dashboard\")}>Back</Button>\n            </div>\n        );\n    }\n}\n\nexport default CurrencyRate;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom'\n\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport Dashboard from './Dashboard';\nimport CurrencyRate from './CurrencyRate';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Route\n          path=\"/\"\n          exact\n          component={Login}\n          // render={props => { return localStorage.getItem(\"users\") ? <Login {...props} /> : <Redirect to=\"/signup\" /> }}\n        />\n        <Route path=\"/signup\" exact component={SignUp} />\n        <Route\n          path=\"/dashboard\"\n          exact\n          render={props => { return localStorage.getItem(\"users\") ? <Dashboard {...props} /> : <Redirect to=\"/\" /> }}\n        />\n        <Route\n          path=\"/rate\"\n          exact\n          render={props => { return localStorage.getItem(\"users\") ? <CurrencyRate {...props} /> : <Redirect to=\"/\" /> }}\n        />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}